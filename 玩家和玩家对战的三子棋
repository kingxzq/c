#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>

#define SIZE 3

char board[SIZE][SIZE]; // 游戏棋盘

void initialize_board() {
    // 初始化棋盘
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            board[i][j] = ' ';
        }
    }
}

void draw_board() {
    // 绘制棋盘
    printf("  1   2   3\n");
    printf("1 %c | %c | %c \n", board[0][0], board[0][1], board[0][2]);
    printf(" ---|---|---\n");
    printf("2 %c | %c | %c \n", board[1][0], board[1][1], board[1][2]);
    printf(" ---|---|---\n");
    printf("3 %c | %c | %c \n", board[2][0], board[2][1], board[2][2]);
}

int get_input(char symbol) {
    // 获取用户输入并更新棋盘
    int row, col;
    printf("请输入%s的下棋位置(例如: 1 2): ", symbol == 'X' ? "玩家1" : "玩家2");
    scanf("%d %d", &row, &col);
    if (row < 1 || row > SIZE || col < 1 || col > SIZE) {
        printf("无效的输入，请重新输入\n");
        return 0;
    }
    if (board[row - 1][col - 1] != ' ') {
        printf("该位置已有棋子，请重新输入\n");
        return 0;
    }
    board[row - 1][col - 1] = symbol;
    return 1;
}

int check_win(char symbol) {
    // 检查是否有人胜利
    for (int i = 0; i < SIZE; i++) {
        if (board[i][0] == symbol && board[i][1] == symbol && board[i][2] == symbol) {
            return 1;
        }
        if (board[0][i] == symbol && board[1][i] == symbol && board[2][i] == symbol) {
            return 1;
        }
    }
    if (board[0][0] == symbol && board[1][1] == symbol && board[2][2] == symbol) {
        return 1;
    }
    if (board[0][2] == symbol && board[1][1] == symbol && board[2][0] == symbol) {
        return 1;
    }
    return 0;
}

int is_full() {
    // 检查棋盘是否已经满了
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (board[i][j] == ' ') {
                return 0;
            }
        }
    }
    return 1;
}
int main() {
    initialize_board();
    draw_board();
    int round = 1;
    char symbol = 'X';
    while (1) {
        if (get_input(symbol)) {
            draw_board();
            if (check_win(symbol)) {
                printf("%c胜利！\n", symbol);
                break;
            }
            if (is_full()) {
                printf("平局！\n");
                break;
            }
            round++;
            symbol = round % 2 == 0 ? 'O' : 'X';
        }
    }
    return 0;
}
